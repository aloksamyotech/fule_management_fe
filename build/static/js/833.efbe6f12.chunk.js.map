{"version":3,"file":"static/js/833.efbe6f12.chunk.js","mappings":"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","sources":["ui-component/TableStyle.js","ui-component/ThemePalette.js","ui-component/iconify/Iconify.js","views/Payroll/ViewPayroll/index.js","views/Payroll/AddPayroll.js","views/Payroll/payrollApi.js","views/Payroll/index.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import { styled } from '@mui/material/styles';\r\nimport Palette from '../ui-component/ThemePalette';\r\n\r\nconst TableStyle = styled('div')({\r\n  '& .MuiDataGrid-root': {\r\n    border: 'none'\r\n  },\r\n  '& .MuiDataGrid-cell': {\r\n    borderBottom: 'none'\r\n  },\r\n  '& .name-column--cell': {\r\n    color: Palette.primary.main,\r\n    cursor: 'pointer'\r\n  },\r\n  '& .name-column--cell--capitalize': {\r\n    textTransform: 'capitalize'\r\n  },\r\n  '& .name-column--cell:hover': {\r\n    textDecoration: 'underline'\r\n  },\r\n  '& .MuiDataGrid-columnHeaders': {\r\n    backgroundColor: Palette.grey[200],\r\n    borderBottom: 'none',\r\n    outline: 'none !important',\r\n    borderRadius: '0px'\r\n  },\r\n  '& .MuiDataGrid-virtualScroller': {\r\n    scrollbarWidth: '1px'\r\n  },\r\n  '& .MuiDataGrid-toolbarContainer .MuiButton-text': {\r\n    textTransform: 'capitalize',\r\n    fontSize: '15px'\r\n  },\r\n  '.MuiDataGrid-cell:focus,.MuiDataGrid-columnHeader:focus,MuiDataGrid-columnHeaderCheckbox:focus': {\r\n    outline: 'none !important'\r\n  },\r\n  '.css-1jiby6q-MuiDataGrid-root .MuiDataGrid-columnHeader:focus-within, .css-1jiby6q-MuiDataGrid-root .MuiDataGrid-cell:focus-within': {\r\n    outline: 'none'\r\n  }\r\n});\r\n\r\nexport default TableStyle;\r\n","import { alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// SETUP COLORS\r\nconst GREY = {\r\n  0: '#FFFFFF',\r\n  100: '#F9FAFB',\r\n  200: '#F4F6F8',\r\n  300: '#DFE3E8',\r\n  400: '#C4CDD5',\r\n  500: '#919EAB',\r\n  600: '#637381',\r\n  700: '#454F5B',\r\n  800: '#212B36',\r\n  900: '#161C24'\r\n};\r\n\r\nconst PRIMARY = {\r\n  lighter: '#D1E9FC',\r\n  light: '#76B0F1',\r\n  main: '#2065D1',\r\n  dark: '#103996',\r\n  darker: '#061B64',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SECONDARY = {\r\n  lighter: '#D6E4FF',\r\n  light: '#84A9FF',\r\n  main: '#3366FF',\r\n  dark: '#1939B7',\r\n  darker: '#091A7A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst INFO = {\r\n  lighter: '#D0F2FF',\r\n  light: '#74CAFF',\r\n  main: '#1890FF',\r\n  dark: '#0C53B7',\r\n  darker: '#04297A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SUCCESS = {\r\n  lighter: '#E9FCD4',\r\n  light: '#AAF27F',\r\n  main: '#54D62C',\r\n  dark: '#229A16',\r\n  darker: '#08660D',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst WARNING = {\r\n  lighter: '#FFF7CD',\r\n  light: '#FFE16A',\r\n  main: '#FFC107',\r\n  dark: '#B78103',\r\n  darker: '#7A4F01',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst ERROR = {\r\n  lighter: '#FFE7D9',\r\n  light: '#FFA48D',\r\n  main: '#FF4842',\r\n  dark: '#B72136',\r\n  darker: '#7A0C2E',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst palette = {\r\n  common: { black: '#000', white: '#fff' },\r\n  primary: PRIMARY,\r\n  secondary: SECONDARY,\r\n  info: INFO,\r\n  success: SUCCESS,\r\n  warning: WARNING,\r\n  error: ERROR,\r\n  grey: GREY,\r\n  divider: alpha(GREY[500], 0.24),\r\n  text: {\r\n    primary: GREY[800],\r\n    secondary: GREY[600],\r\n    disabled: GREY[500]\r\n  },\r\n  background: {\r\n    paper: '#fff',\r\n    default: GREY[100],\r\n    neutral: GREY[200]\r\n  },\r\n  action: {\r\n    active: GREY[600],\r\n    hover: alpha(GREY[500], 0.08),\r\n    selected: alpha(GREY[500], 0.16),\r\n    disabled: alpha(GREY[500], 0.8),\r\n    disabledBackground: alpha(GREY[500], 0.24),\r\n    focus: alpha(GREY[500], 0.24),\r\n    hoverOpacity: 0.08,\r\n    disabledOpacity: 0.48\r\n  }\r\n};\r\n\r\nexport default palette;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// icons\r\nimport { Icon } from '@iconify/react';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box ref={ref} component={Icon} icon={icon} sx={{ width, height: width, ...sx }} {...other} />\r\n));\r\n\r\nIconify.propTypes = {\r\n  sx: PropTypes.object,\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\r\n};\r\n\r\nexport default Iconify;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport {\r\n  Button,\r\n  // Dialog,\r\n  // DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  // DialogTitle,\r\n  // FormControl,\r\n  // FormHelperText,\r\n  // FormLabel,\r\n  // Grid,\r\n  // InputAdornment,\r\n  // MenuItem,\r\n  // OutlinedInput,\r\n  // Radio,\r\n  // RadioGroup,\r\n  // Rating,\r\n  // Select,\r\n  // TextField,\r\n  Typography,\r\n  Stack,\r\n  Box,\r\n  Card\r\n} from '@mui/material';\r\n\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport TableStyle from '../../../ui-component/TableStyle';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ViewPayrollHistory = () => {\r\n  const validationSchema = yup.object({\r\n    // Your validation schema here\r\n  });\r\n\r\n  const initialValues = {\r\n    // Your initial values here\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log('leadValues', values);\r\n      toast.success('Lead added successfully');\r\n    }\r\n  });\r\n\r\n  const fuelData = [\r\n    {\r\n      id: 1,\r\n      fuelType: 'Petrol',\r\n      totalLitersSupplied: '1,930.00 Liters',\r\n      cost: '40,000,.00',\r\n      supplier: 'Adeola',\r\n      date: 'Wed 2nd March, 2022'\r\n    }\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      field: 'fuelType',\r\n      headerName: 'FUEL TYPE',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize',\r\n      headerAlign: 'center',\r\n      align: 'center'\r\n    },\r\n    {\r\n      field: 'totalLitersSupplied',\r\n      headerName: 'TOTAL LITERS SUPPLIED',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize',\r\n      headerAlign: 'center',\r\n      align: 'center'\r\n    },\r\n    {\r\n      field: 'cost',\r\n      headerName: 'COST',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize',\r\n      headerAlign: 'center',\r\n      align: 'center'\r\n    },\r\n    {\r\n      field: 'supplier',\r\n      headerName: 'SUPPLIER',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize',\r\n      headerAlign: 'center',\r\n      align: 'center'\r\n    },\r\n    {\r\n      field: 'date',\r\n      headerName: 'DATE',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize',\r\n      headerAlign: 'center',\r\n      align: 'center'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <DialogContent dividers>\r\n        <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n          <Stack direction=\"row\" alignItems=\"center\" mb={5} justifyContent=\"space-between\">\r\n            <Typography style={{ marginBottom: '15px' }} variant=\"h6\">\r\n              <h1>PAYROLL HISTORY DETAILS</h1>\r\n            </Typography>{' '}\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" spacing={2}>\r\n              <Button variant=\"contained\" component={Link} to=\"/hrms/payroll\">\r\n                BACK\r\n              </Button>\r\n            </Stack>\r\n          </Stack>\r\n          <TableStyle>\r\n            <Box width=\"100%\">\r\n              <Card style={{ height: '600px', paddingTop: '15px' }}>\r\n                <DataGrid\r\n                  rows={fuelData}\r\n                  columns={columns}\r\n                  getRowId={(row) => row.id}\r\n                  slots={{ toolbar: GridToolbar }}\r\n                  slotProps={{ toolbar: { showQuickFilter: true } }}\r\n                />\r\n              </Card>\r\n            </Box>\r\n          </TableStyle>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPayrollHistory;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { FormControl, FormHelperText, FormLabel, Grid, MenuItem, Select, TextField } from '@mui/material';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport Palette from '../../ui-component/ThemePalette';\r\nimport { fetchStaffRecords, savePayrollDetails } from './payrollApi';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PayrollData = (props) => {\r\n  const { open, handleClose, fetchPayrollDetails } = props;\r\n  const [staff, setStaff] = useState([]);\r\n  const [payroll, setPayroll] = useState([]);\r\n  // const [selectedStaff, setSelectedStaff] = useState('');\r\n\r\n  const validationSchema = yup.object({\r\n    staff: yup.string().required('Staff is required'),\r\n    basic_salary: yup.number().required('Basic Salary is required'),\r\n    allowances: yup.number().required('Total Allowances is required'),\r\n    tds: yup.number().required('TDS is required')\r\n  });\r\n\r\n  const initialValues = {\r\n    staff: '',\r\n    basic_salary: '',\r\n    allowances: '',\r\n    tds: ''\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log('leadValues', values);\r\n      const response = await savePayrollDetails(values);\r\n      if (response.data == 'internal server error') {\r\n        toast.error(response.data);\r\n      } else {\r\n        toast.success('PayRoll added successfully', { autoClose: 600 });\r\n        formik.resetForm();\r\n        handleClose();\r\n        fetchPayrollDetails();\r\n      }\r\n    }\r\n  });\r\n\r\n  const fetchStaffDetails = async () => {\r\n    try {\r\n      const staffData = await fetchStaffRecords();\r\n\r\n      const data = staffData.data.map((item) => ({\r\n        name: item?.full_name,\r\n        id: item?._id\r\n      }));\r\n      setStaff(data);\r\n    } catch (error) {\r\n      toast.error('something went wrong');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStaffDetails();\r\n  }, []);\r\n\r\n  // const handleStaffChange = (event) => {\r\n  //   setSelectedStaff(event.target.value);\r\n  //   formik.setFieldValue('staff', event.target.value);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"scroll-dialog-title\" aria-describedby=\"scroll-dialog-description\">\r\n        <DialogTitle id=\"scroll-dialog-title\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Typography variant=\"h3\" style={{ marginLeft: '180px' }}>\r\n            Add New Payroll\r\n          </Typography>\r\n          <Typography>\r\n            <ClearIcon onClick={handleClose} style={{ cursor: 'pointer' }} />\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n              <Typography style={{ marginBottom: '15px' }} variant=\"h6\">\r\n                <h1>Enter Payroll Details</h1>\r\n              </Typography>\r\n              <Grid container rowSpacing={3} columnSpacing={{ xs: 0, sm: 5, md: 4 }}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel>Staff</FormLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"staff\"\r\n                      name=\"staff\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      value={formik.values.staff || ''}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.staff && Boolean(formik.errors.staff)}\r\n                      helperText={formik.touched.staff && formik.errors.staff}\r\n                    >\r\n                      {staff &&\r\n                        staff.map((item) => (\r\n                          <MenuItem key={item.id} value={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText style={{ color: Palette.error.main }}>{formik.touched.staff && formik.errors.staff}</FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Basic Salary</FormLabel>\r\n                  <TextField\r\n                    id=\"basic_salary\"\r\n                    name=\"basic_salary\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={formik.values.basic_salary}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.basic_salary && Boolean(formik.errors.basic_salary)}\r\n                    helperText={formik.touched.basic_salary && formik.errors.basic_salary}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Total Allowances</FormLabel>\r\n                  <TextField\r\n                    id=\"allowances\"\r\n                    name=\"allowances\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={formik.values.allowances}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.allowances && Boolean(formik.errors.allowances)}\r\n                    helperText={formik.touched.allowances && formik.errors.allowances}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Tax Deducted at Source (TDS) </FormLabel>\r\n                  <TextField\r\n                    id=\"tds\"\r\n                    name=\"tds\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={formik.values.tds}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.tds && Boolean(formik.errors.tds)}\r\n                    helperText={formik.touched.tds && formik.errors.tds}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContentText>\r\n\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  formik.resetForm();\r\n                  handleClose();\r\n                }}\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PayrollData;\r\n","import { apiurls } from 'Service/api';\r\nimport axios from 'axios';\r\n\r\nexport const fetchStaffRecords = async () => {\r\n  return await axios.get(apiurls.getAllStaff);\r\n};\r\n\r\nexport const savePayrollDetails = async (payrollData) => {\r\n  const url = apiurls.savePayroll;\r\n  return await axios.post(url, payrollData);\r\n};\r\n\r\nexport const fetchPayrollRecords = async () => {\r\n  return await axios.get(apiurls?.fetchPayroll);\r\n};\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { Stack, Button, Container, Typography, Card, Box } from '@mui/material';\r\nimport TableStyle from '../../ui-component/TableStyle';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport Iconify from '../../ui-component/iconify';\r\nimport PayrollData from './AddPayroll';\r\nimport ViewPayrollHistory from './ViewPayroll';\r\nimport { IconButton } from '@mui/material';\r\nimport ViewIcon from '@mui/icons-material/Visibility';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchPayrollRecords } from './payrollApi';\r\nimport moment from 'moment';\r\n// ----------------------------------------------------------------------\r\n\r\nconst Documents = () => {\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n  const [payroll, setPayroll] = useState([]);\r\n  const columns = [\r\n    {\r\n      field: 'name',\r\n      headerName: 'STAFF NAME',\r\n      flex: 1,\r\n      cellClassName: ' name-column--cell--capitalize'\r\n    },\r\n    {\r\n      field: 'salary',\r\n      headerName: 'SALARY',\r\n      flex: 1\r\n    },\r\n    {\r\n      field: 'allowances',\r\n      headerName: 'ALLOWANCE ',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize'\r\n    },\r\n    {\r\n      field: 'tds',\r\n      headerName: 'TDS',\r\n      flex: 1\r\n    },\r\n    {\r\n      field: 'joinDate',\r\n      headerName: 'JOIN DATE',\r\n      flex: 1\r\n    }\r\n    // {\r\n    //   field: 'action',\r\n    //   headerName: 'ACTION',\r\n    //   flex: 1,\r\n    //   renderCell: () => (\r\n    //     <div>\r\n    //       <IconButton component={Link} to=\"/ping/payrollData\" color=\"primary\">\r\n    //         <ViewIcon />\r\n    //       </IconButton>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  ];\r\n  const fetchPayrollDetails = async () => {\r\n    try {\r\n      const response = await fetchPayrollRecords();\r\n      console.log(response);\r\n      if (response?.data === 'internal server error') {\r\n        toast.error('internal server error');\r\n      } else {\r\n        const data = response.data.map((item) => {\r\n          return {\r\n            name: item?.staff.full_name,\r\n            allowances: item?.allowances,\r\n            tds: item?.tds,\r\n            salary: item?.basic_salary,\r\n            joinDate: moment(item?.created_at).format('YYYY-MM-DD HH:mm:ss'),\r\n            id: item?._id\r\n          };\r\n        });\r\n        setPayroll(data);\r\n      }\r\n    } catch (error) {\r\n      toast.error('something went wrong');\r\n    }\r\n  };\r\n  const handleOpenAdd = () => setOpenAdd(true);\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n\r\n  useEffect(() => {\r\n    fetchPayrollDetails();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <PayrollData open={openAdd} handleClose={handleCloseAdd} fetchPayrollDetails={fetchPayrollDetails} />\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" mb={5} justifyContent={'space-between'}>\r\n          <Typography variant=\"h4\">Payroll Lists</Typography>\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent={'flex-end'} spacing={2}>\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={handleOpenAdd}>\r\n              Add Payroll\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n        <TableStyle>\r\n          <Box width=\"100%\">\r\n            <Card style={{ height: '600px', paddingTop: '15px' }}>\r\n              <DataGrid\r\n                rows={payroll}\r\n                columns={columns}\r\n                getRowId={payroll.id}\r\n                slots={{ toolbar: GridToolbar }}\r\n                slotProps={{ toolbar: { showQuickFilter: true } }}\r\n              />\r\n            </Card>\r\n          </Box>\r\n        </TableStyle>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Documents;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["TableStyle","styled","border","borderBottom","color","Palette","cursor","textTransform","textDecoration","backgroundColor","outline","borderRadius","scrollbarWidth","fontSize","GREY","palette","common","black","white","primary","lighter","light","main","dark","darker","contrastText","secondary","info","success","warning","error","grey","divider","alpha","text","disabled","background","paper","default","neutral","action","active","hover","selected","disabledBackground","focus","hoverOpacity","disabledOpacity","Iconify","forwardRef","_ref","ref","icon","width","sx","other","_jsx","Box","component","Icon","height","propTypes","PropTypes","ViewPayrollHistory","validationSchema","yup","useFormik","initialValues","onSubmit","async","console","log","values","toast","children","DialogContent","dividers","_jsxs","DialogContentText","id","tabIndex","Stack","direction","alignItems","mb","justifyContent","Typography","style","marginBottom","variant","spacing","Button","Link","to","Card","paddingTop","DataGrid","rows","fuelType","totalLitersSupplied","cost","supplier","date","columns","field","headerName","flex","cellClassName","headerAlign","align","getRowId","row","slots","toolbar","GridToolbar","slotProps","showQuickFilter","props","open","handleClose","fetchPayrollDetails","staff","setStaff","useState","payroll","setPayroll","required","basic_salary","allowances","tds","formik","response","url","apiurls","axios","payrollData","savePayrollDetails","data","autoClose","resetForm","fetchStaffDetails","fetchStaffRecords","map","item","name","full_name","_id","useEffect","Dialog","onClose","DialogTitle","display","marginLeft","ClearIcon","onClick","handleSubmit","Grid","container","rowSpacing","columnSpacing","xs","sm","md","FormControl","fullWidth","FormLabel","Select","labelId","label","size","value","onChange","handleChange","touched","Boolean","errors","helperText","MenuItem","FormHelperText","TextField","type","DialogActions","Documents","openAdd","setOpenAdd","fetchPayrollRecords","salary","joinDate","moment","created_at","format","_Fragment","PayrollData","handleCloseAdd","Container","startIcon","handleOpenAdd","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","React","inProps","useThemeProps","className","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx"],"sourceRoot":""}