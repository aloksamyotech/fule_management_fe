{"version":3,"file":"static/js/602.2dd8216f.chunk.js","mappings":"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","sources":["ui-component/TableStyle.js","ui-component/ThemePalette.js","ui-component/iconify/Iconify.js","views/Staff/AddStaff.js","views/Staff/index.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import { styled } from '@mui/material/styles';\r\nimport Palette from '../ui-component/ThemePalette';\r\n\r\nconst TableStyle = styled('div')({\r\n  '& .MuiDataGrid-root': {\r\n    border: 'none'\r\n  },\r\n  '& .MuiDataGrid-cell': {\r\n    borderBottom: 'none'\r\n  },\r\n  '& .name-column--cell': {\r\n    color: Palette.primary.main,\r\n    cursor: 'pointer'\r\n  },\r\n  '& .name-column--cell--capitalize': {\r\n    textTransform: 'capitalize'\r\n  },\r\n  '& .name-column--cell:hover': {\r\n    textDecoration: 'underline'\r\n  },\r\n  '& .MuiDataGrid-columnHeaders': {\r\n    backgroundColor: Palette.grey[200],\r\n    borderBottom: 'none',\r\n    outline: 'none !important',\r\n    borderRadius: '0px'\r\n  },\r\n  '& .MuiDataGrid-virtualScroller': {\r\n    scrollbarWidth: '1px'\r\n  },\r\n  '& .MuiDataGrid-toolbarContainer .MuiButton-text': {\r\n    textTransform: 'capitalize',\r\n    fontSize: '15px'\r\n  },\r\n  '.MuiDataGrid-cell:focus,.MuiDataGrid-columnHeader:focus,MuiDataGrid-columnHeaderCheckbox:focus': {\r\n    outline: 'none !important'\r\n  },\r\n  '.css-1jiby6q-MuiDataGrid-root .MuiDataGrid-columnHeader:focus-within, .css-1jiby6q-MuiDataGrid-root .MuiDataGrid-cell:focus-within': {\r\n    outline: 'none'\r\n  }\r\n});\r\n\r\nexport default TableStyle;\r\n","import { alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// SETUP COLORS\r\nconst GREY = {\r\n  0: '#FFFFFF',\r\n  100: '#F9FAFB',\r\n  200: '#F4F6F8',\r\n  300: '#DFE3E8',\r\n  400: '#C4CDD5',\r\n  500: '#919EAB',\r\n  600: '#637381',\r\n  700: '#454F5B',\r\n  800: '#212B36',\r\n  900: '#161C24'\r\n};\r\n\r\nconst PRIMARY = {\r\n  lighter: '#D1E9FC',\r\n  light: '#76B0F1',\r\n  main: '#2065D1',\r\n  dark: '#103996',\r\n  darker: '#061B64',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SECONDARY = {\r\n  lighter: '#D6E4FF',\r\n  light: '#84A9FF',\r\n  main: '#3366FF',\r\n  dark: '#1939B7',\r\n  darker: '#091A7A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst INFO = {\r\n  lighter: '#D0F2FF',\r\n  light: '#74CAFF',\r\n  main: '#1890FF',\r\n  dark: '#0C53B7',\r\n  darker: '#04297A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SUCCESS = {\r\n  lighter: '#E9FCD4',\r\n  light: '#AAF27F',\r\n  main: '#54D62C',\r\n  dark: '#229A16',\r\n  darker: '#08660D',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst WARNING = {\r\n  lighter: '#FFF7CD',\r\n  light: '#FFE16A',\r\n  main: '#FFC107',\r\n  dark: '#B78103',\r\n  darker: '#7A4F01',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst ERROR = {\r\n  lighter: '#FFE7D9',\r\n  light: '#FFA48D',\r\n  main: '#FF4842',\r\n  dark: '#B72136',\r\n  darker: '#7A0C2E',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst palette = {\r\n  common: { black: '#000', white: '#fff' },\r\n  primary: PRIMARY,\r\n  secondary: SECONDARY,\r\n  info: INFO,\r\n  success: SUCCESS,\r\n  warning: WARNING,\r\n  error: ERROR,\r\n  grey: GREY,\r\n  divider: alpha(GREY[500], 0.24),\r\n  text: {\r\n    primary: GREY[800],\r\n    secondary: GREY[600],\r\n    disabled: GREY[500]\r\n  },\r\n  background: {\r\n    paper: '#fff',\r\n    default: GREY[100],\r\n    neutral: GREY[200]\r\n  },\r\n  action: {\r\n    active: GREY[600],\r\n    hover: alpha(GREY[500], 0.08),\r\n    selected: alpha(GREY[500], 0.16),\r\n    disabled: alpha(GREY[500], 0.8),\r\n    disabledBackground: alpha(GREY[500], 0.24),\r\n    focus: alpha(GREY[500], 0.24),\r\n    hoverOpacity: 0.08,\r\n    disabledOpacity: 0.48\r\n  }\r\n};\r\n\r\nexport default palette;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// icons\r\nimport { Icon } from '@iconify/react';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box ref={ref} component={Icon} icon={icon} sx={{ width, height: width, ...sx }} {...other} />\r\n));\r\n\r\nIconify.propTypes = {\r\n  sx: PropTypes.object,\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\r\n};\r\n\r\nexport default Iconify;\r\n","/* eslint-disable react/prop-types */\r\nimport * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { FormControl, FormHelperText, FormLabel, Grid, MenuItem, Select, TextField } from '@mui/material';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport Palette from '../../ui-component/ThemePalette';\r\nimport axios from 'axios';\r\nimport { apiurls } from 'Service/api';\r\n\r\nconst AddPolicy = (props) => {\r\n  const { open, handleClose, getStaff } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    designation: yup.string().required('Designation Type is required'),\r\n    full_name: yup.string().required('Name is required'),\r\n    address: yup.string().required('address is required'),\r\n    qualification: yup.string().required('Qualification is required'),\r\n    phone: yup\r\n      .string()\r\n      .matches(/^[0-9]{10}$/, 'Phone number is invalid')\r\n      .required('Phone number is required'),\r\n    email: yup.string().email('Invalid email').required('Email is required')\r\n  });\r\n\r\n  const initialValues = {\r\n    designation: '',\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    qualification: ''\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log('values', values);\r\n      const data = await axios.post(apiurls?.saveStaff, values);\r\n      if (data.data == 'internal server error') {\r\n        toast.error(data.data);\r\n      } else {\r\n        await getStaff();\r\n        toast.success('Staff Add successfully', { autoClose: 600 });\r\n        handleClose();\r\n        formik.resetForm();\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"scroll-dialog-title\" aria-describedby=\"scroll-dialog-description\">\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography variant=\"h3\">ENTER STAFF DETAILS </Typography>\r\n          <Typography>\r\n            <ClearIcon onClick={handleClose} style={{ cursor: 'pointer' }} />\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n              <Typography style={{ marginBottom: '15px' }} variant=\"h6\">\r\n                Staff Details\r\n              </Typography>\r\n              <Grid container rowSpacing={3} columnSpacing={{ xs: 0, sm: 5, md: 4 }}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel>Designation</FormLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"designation\"\r\n                      name=\"designation\"\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      value={formik.values.designation || ''}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.designation && Boolean(formik.errors.designation)}\r\n                      helperText={formik.touched.designation && formik.errors.designation}\r\n                    >\r\n                      <MenuItem value=\"Manager\">Manager</MenuItem>\r\n                      <MenuItem value=\"Attendant\">Attendant</MenuItem>\r\n                      <MenuItem value=\"Messenger\">Messenger</MenuItem>\r\n                      <MenuItem value=\"Security\">Security</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText style={{ color: Palette.error.main }}>\r\n                      {formik.touched.designation && formik.errors.designation}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Full Name</FormLabel>\r\n                  <TextField\r\n                    name=\"full_name\"\r\n                    type=\"string\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.full_name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.full_name && Boolean(formik.errors.full_name)}\r\n                    helperText={formik.touched.full_name && formik.errors.full_name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Phone Number</FormLabel>\r\n                  <TextField\r\n                    name=\"phone\"\r\n                    type=\"number\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n                    helperText={formik.touched.phone && formik.errors.phone}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Email</FormLabel>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Address</FormLabel>\r\n                  <TextField\r\n                    id=\"address\"\r\n                    name=\"address\"\r\n                    type=\"string\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.address}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.address && Boolean(formik.errors.address)}\r\n                    helperText={formik.touched.address && formik.errors.address}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel>Qualification</FormLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"qualification\"\r\n                      name=\"qualification\"\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      value={formik.values.qualification || ''}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.qualification && Boolean(formik.errors.qualification)}\r\n                      helperText={formik.touched.qualification && formik.errors.qualification}\r\n                    >\r\n                      <MenuItem value=\"UNDER-GRADUATION\">UNDER-GRADUATION</MenuItem>\r\n                      <MenuItem value=\"POST-GRADUATION\">POST-GRADUATION</MenuItem>\r\n                      <MenuItem value=\"MASTERS\">MASTERS</MenuItem>\r\n                      <MenuItem value=\"INTER\">INTER</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText style={{ color: Palette.error.main }}>\r\n                      {formik.touched.qualification && formik.errors.qualification}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContentText>\r\n            <DialogActions>\r\n              <Button onClick={formik.handleSubmit} variant=\"contained\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  formik.resetForm();\r\n                  handleClose();\r\n                }}\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPolicy;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { Stack, Button, Container, Typography, Card, Box } from '@mui/material';\r\nimport TableStyle from '../../ui-component/TableStyle';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport Iconify from '../../ui-component/iconify';\r\nimport { IconButton } from '@mui/material';\r\nimport AddStaff from './AddStaff';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { Visibility } from '@mui/icons-material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useEffect } from 'react';\r\nimport { apiurls } from 'Service/api';\r\nimport axios from 'axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StaffManagement = () => {\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n  const [staffData, setStaffData] = useState([]);\r\n  const columns = [\r\n    {\r\n      field: 'staffId',\r\n      headerName: 'STAFF ID',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize'\r\n    },\r\n    {\r\n      field: 'name',\r\n      headerName: 'NAME',\r\n      flex: 1,\r\n      cellClassName: 'name-column--cell--capitalize'\r\n    },\r\n    {\r\n      field: 'phone',\r\n      headerName: 'PHONE',\r\n      flex: 1\r\n    },\r\n    {\r\n      field: 'email',\r\n      headerName: 'EMAIL',\r\n      flex: 1\r\n    },\r\n    {\r\n      field: 'address',\r\n      headerName: 'ADDRESS',\r\n      flex: 1\r\n    },\r\n    {\r\n      field: 'position',\r\n      headerName: 'POSITION',\r\n      flex: 1\r\n    }\r\n    // {\r\n    //   field: 'action',\r\n    //   headerName: 'ACTION ',\r\n    //   flex: 1,\r\n    //   renderCell: (params) => (\r\n    //     <div>\r\n    //       <IconButton color=\"primary\" onClick={() => handleEdit(params.row.id)}>\r\n    //         <EditIcon />\r\n    //       </IconButton>\r\n    //       <IconButton color=\"error\" onClick={() => handleDelete(params.row.id)}>\r\n    //         <DeleteIcon />\r\n    //       </IconButton>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  ];\r\n\r\n  const handleOpenAdd = () => setOpenAdd(true);\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n\r\n  const fetchStaff = async () => {\r\n    try {\r\n      const staffData = await axios.get(apiurls?.getAllStaff);\r\n      console.log(staffData);\r\n      const data =\r\n        staffData &&\r\n        staffData.data.map((staff, index) => {\r\n          return {\r\n            staffId: staff?.reg_number,\r\n            name: staff?.full_name || '-',\r\n            phone: '+91 ' + staff?.phone || '-',\r\n            email: staff?.email || '-',\r\n            address: staff?.address || '-',\r\n            position: staff?.designation || '-',\r\n            id: staff?._id || index\r\n          };\r\n        });\r\n      setStaffData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStaff();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <AddStaff open={openAdd} handleClose={handleCloseAdd} getStaff={fetchStaff} />\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" mb={5} justifyContent={'space-between'}>\r\n          <Typography variant=\"h4\">Staff-Management</Typography>\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent={'flex-end'} spacing={2}>\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={handleOpenAdd}>\r\n              Add New staff\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n        <TableStyle>\r\n          <Box width=\"100%\">\r\n            <Card style={{ height: '600px', paddingTop: '15px' }}>\r\n              <DataGrid\r\n                rows={staffData}\r\n                columns={columns}\r\n                getRowId={staffData?.id}\r\n                slots={{ toolbar: GridToolbar }}\r\n                slotProps={{ toolbar: { showQuickFilter: true } }}\r\n                key={staffData?.id}\r\n              />\r\n            </Card>\r\n          </Box>\r\n        </TableStyle>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffManagement;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["TableStyle","styled","border","borderBottom","color","Palette","cursor","textTransform","textDecoration","backgroundColor","outline","borderRadius","scrollbarWidth","fontSize","GREY","palette","common","black","white","primary","lighter","light","main","dark","darker","contrastText","secondary","info","success","warning","error","grey","divider","alpha","text","disabled","background","paper","default","neutral","action","active","hover","selected","disabledBackground","focus","hoverOpacity","disabledOpacity","Iconify","forwardRef","_ref","ref","icon","width","sx","other","_jsx","Box","component","Icon","height","propTypes","PropTypes","props","open","handleClose","getStaff","validationSchema","yup","designation","required","full_name","address","qualification","phone","matches","email","formik","useFormik","initialValues","name","onSubmit","async","console","log","values","data","axios","apiurls","toast","autoClose","resetForm","children","_jsxs","Dialog","onClose","DialogTitle","id","style","display","justifyContent","Typography","variant","ClearIcon","onClick","DialogContent","dividers","handleSubmit","DialogContentText","tabIndex","marginBottom","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","FormControl","fullWidth","FormLabel","Select","labelId","size","value","onChange","handleChange","touched","Boolean","errors","helperText","MenuItem","FormHelperText","TextField","type","DialogActions","Button","StaffManagement","openAdd","setOpenAdd","useState","staffData","setStaffData","fetchStaff","map","staff","index","staffId","reg_number","position","_id","useEffect","_Fragment","AddStaff","handleCloseAdd","Container","Stack","direction","alignItems","mb","spacing","startIcon","handleOpenAdd","Card","paddingTop","DataGrid","rows","columns","field","headerName","flex","cellClassName","getRowId","slots","toolbar","GridToolbar","slotProps","showQuickFilter","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","React","inProps","useThemeProps","className","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx"],"sourceRoot":""}