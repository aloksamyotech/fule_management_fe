{"version":3,"file":"static/js/825.68c4bce3.chunk.js","mappings":"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","sources":["ui-component/TableStyle.js","ui-component/ThemePalette.js","ui-component/iconify/Iconify.js","views/Fuel/OverOrderHistory/index.js","views/Fuel/AddFuel.js","../node_modules/@mui/icons-material/esm/Visibility.js","views/Fuel/index.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import { styled } from '@mui/material/styles';\r\nimport Palette from '../ui-component/ThemePalette';\r\n\r\nconst TableStyle = styled('div')({\r\n  '& .MuiDataGrid-root': {\r\n    border: 'none'\r\n  },\r\n  '& .MuiDataGrid-cell': {\r\n    borderBottom: 'none'\r\n  },\r\n  '& .name-column--cell': {\r\n    color: Palette.primary.main,\r\n    cursor: 'pointer'\r\n  },\r\n  '& .name-column--cell--capitalize': {\r\n    textTransform: 'capitalize'\r\n  },\r\n  '& .name-column--cell:hover': {\r\n    textDecoration: 'underline'\r\n  },\r\n  '& .MuiDataGrid-columnHeaders': {\r\n    backgroundColor: Palette.grey[200],\r\n    borderBottom: 'none',\r\n    outline: 'none !important',\r\n    borderRadius: '0px'\r\n  },\r\n  '& .MuiDataGrid-virtualScroller': {\r\n    scrollbarWidth: '1px'\r\n  },\r\n  '& .MuiDataGrid-toolbarContainer .MuiButton-text': {\r\n    textTransform: 'capitalize',\r\n    fontSize: '15px'\r\n  },\r\n  '.MuiDataGrid-cell:focus,.MuiDataGrid-columnHeader:focus,MuiDataGrid-columnHeaderCheckbox:focus': {\r\n    outline: 'none !important'\r\n  },\r\n  '.css-1jiby6q-MuiDataGrid-root .MuiDataGrid-columnHeader:focus-within, .css-1jiby6q-MuiDataGrid-root .MuiDataGrid-cell:focus-within': {\r\n    outline: 'none'\r\n  }\r\n});\r\n\r\nexport default TableStyle;\r\n","import { alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// SETUP COLORS\r\nconst GREY = {\r\n  0: '#FFFFFF',\r\n  100: '#F9FAFB',\r\n  200: '#F4F6F8',\r\n  300: '#DFE3E8',\r\n  400: '#C4CDD5',\r\n  500: '#919EAB',\r\n  600: '#637381',\r\n  700: '#454F5B',\r\n  800: '#212B36',\r\n  900: '#161C24'\r\n};\r\n\r\nconst PRIMARY = {\r\n  lighter: '#D1E9FC',\r\n  light: '#76B0F1',\r\n  main: '#2065D1',\r\n  dark: '#103996',\r\n  darker: '#061B64',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SECONDARY = {\r\n  lighter: '#D6E4FF',\r\n  light: '#84A9FF',\r\n  main: '#3366FF',\r\n  dark: '#1939B7',\r\n  darker: '#091A7A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst INFO = {\r\n  lighter: '#D0F2FF',\r\n  light: '#74CAFF',\r\n  main: '#1890FF',\r\n  dark: '#0C53B7',\r\n  darker: '#04297A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SUCCESS = {\r\n  lighter: '#E9FCD4',\r\n  light: '#AAF27F',\r\n  main: '#54D62C',\r\n  dark: '#229A16',\r\n  darker: '#08660D',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst WARNING = {\r\n  lighter: '#FFF7CD',\r\n  light: '#FFE16A',\r\n  main: '#FFC107',\r\n  dark: '#B78103',\r\n  darker: '#7A4F01',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst ERROR = {\r\n  lighter: '#FFE7D9',\r\n  light: '#FFA48D',\r\n  main: '#FF4842',\r\n  dark: '#B72136',\r\n  darker: '#7A0C2E',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst palette = {\r\n  common: { black: '#000', white: '#fff' },\r\n  primary: PRIMARY,\r\n  secondary: SECONDARY,\r\n  info: INFO,\r\n  success: SUCCESS,\r\n  warning: WARNING,\r\n  error: ERROR,\r\n  grey: GREY,\r\n  divider: alpha(GREY[500], 0.24),\r\n  text: {\r\n    primary: GREY[800],\r\n    secondary: GREY[600],\r\n    disabled: GREY[500]\r\n  },\r\n  background: {\r\n    paper: '#fff',\r\n    default: GREY[100],\r\n    neutral: GREY[200]\r\n  },\r\n  action: {\r\n    active: GREY[600],\r\n    hover: alpha(GREY[500], 0.08),\r\n    selected: alpha(GREY[500], 0.16),\r\n    disabled: alpha(GREY[500], 0.8),\r\n    disabledBackground: alpha(GREY[500], 0.24),\r\n    focus: alpha(GREY[500], 0.24),\r\n    hoverOpacity: 0.08,\r\n    disabledOpacity: 0.48\r\n  }\r\n};\r\n\r\nexport default palette;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// icons\r\nimport { Icon } from '@iconify/react';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box ref={ref} component={Icon} icon={icon} sx={{ width, height: width, ...sx }} {...other} />\r\n));\r\n\r\nIconify.propTypes = {\r\n  sx: PropTypes.object,\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\r\n};\r\n\r\nexport default Iconify;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport {\r\n  Button,\r\n  // Dialog,\r\n  // DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  // DialogTitle,\r\n  // FormControl,\r\n  // FormHelperText,\r\n  // FormLabel,\r\n  // Grid,\r\n  // InputAdornment,\r\n  // MenuItem,\r\n  // OutlinedInput,\r\n  // Radio,\r\n  // RadioGroup,\r\n  // Rating,\r\n  // Select,\r\n  // TextField,\r\n  Typography,\r\n  Stack,\r\n  Box,\r\n  Card\r\n} from '@mui/material';\r\n\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport TableStyle from '../../../ui-component/TableStyle';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { apiurls } from 'Service/api';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst ViewOrderHistory = () => {\r\n  const [orderData, setOrderData] = useState([]);\r\n\r\n  const fetchOrderData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.getOrder);\r\n      console.log(response);\r\n      const data = response.data.map((item) => {\r\n        return {\r\n          fuelType: item?.fuel.fuel_type,\r\n          totalLitersSupplied: item?.liters,\r\n          cost: item?.cost,\r\n          supplier: item?.supplier.name,\r\n          pump: item?.pump.code,\r\n          date: moment(item?.created_at).format('YYYY-MM-DD HH:mm:ss'),\r\n          id: item?._id\r\n        };\r\n      });\r\n      setOrderData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching fuel data:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchOrderData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DialogContent dividers>\r\n        <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n          <Stack direction=\"row\" alignItems=\"center\" mb={5} justifyContent=\"space-between\">\r\n            <Typography style={{ marginBottom: '15px' }} variant=\"h6\">\r\n              <h1>ORDER HISTORY DETAILS</h1>\r\n            </Typography>{' '}\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" spacing={2}>\r\n              <Button variant=\"contained\" component={Link} to=\"/managment/Fuel\">\r\n                BACK\r\n              </Button>\r\n            </Stack>\r\n          </Stack>\r\n          <TableStyle>\r\n            <Box width=\"100%\">\r\n              <Card style={{ height: '600px', paddingTop: '15px' }}>\r\n                <DataGrid\r\n                  rows={orderData && orderData}\r\n                  columns={[\r\n                    {\r\n                      field: 'fuelType',\r\n                      headerName: 'FUEL TYPE',\r\n                      flex: 1,\r\n                      cellClassName: 'name-column--cell name-column--cell--capitalize',\r\n                      headerAlign: 'center',\r\n                      align: 'center'\r\n                    },\r\n                    {\r\n                      field: 'totalLitersSupplied',\r\n                      headerName: 'TOTAL LITERS SUPPLIED',\r\n                      flex: 1,\r\n                      cellClassName: 'name-column--cell--capitalize',\r\n                      headerAlign: 'center',\r\n                      align: 'center'\r\n                    },\r\n                    {\r\n                      field: 'cost',\r\n                      headerName: 'COST',\r\n                      flex: 1,\r\n                      cellClassName: 'name-column--cell--capitalize',\r\n                      headerAlign: 'center',\r\n                      align: 'center'\r\n                    },\r\n                    {\r\n                      field: 'supplier',\r\n                      headerName: 'SUPPLIER',\r\n                      flex: 1,\r\n                      cellClassName: 'name-column--cell--capitalize',\r\n                      headerAlign: 'center',\r\n                      align: 'center'\r\n                    },\r\n                    {\r\n                      field: 'pump',\r\n                      headerName: 'PUMP',\r\n                      flex: 1,\r\n                      cellClassName: 'name-column--cell--capitalize',\r\n                      headerAlign: 'center',\r\n                      align: 'center'\r\n                    },\r\n                    {\r\n                      field: 'date',\r\n                      headerName: 'DATE',\r\n                      flex: 1,\r\n                      cellClassName: 'name-column--cell--capitalize',\r\n                      headerAlign: 'center',\r\n                      align: 'center'\r\n                    }\r\n                  ]}\r\n                  getRowId={(row) => row.id}\r\n                  slots={{ toolbar: GridToolbar }}\r\n                  slotProps={{ toolbar: { showQuickFilter: true } }}\r\n                />\r\n              </Card>\r\n            </Box>\r\n          </TableStyle>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewOrderHistory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { FormControl, FormHelperText, FormLabel, Grid, MenuItem, Select, TextField } from '@mui/material';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { apiurls } from 'Service/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AddLead = (props) => {\r\n  const { open, handleClose } = props;\r\n  const [fuelData, setFuelData] = useState([]);\r\n  const [supplierData, setSupplierData] = useState([]);\r\n  const [pumpData, setPumpData] = useState([]);\r\n\r\n  const validationSchema = yup.object({\r\n    fuel: yup.string().required('Fuel Type is required'),\r\n    supplier: yup.string().required('Supplier Name is required'),\r\n    cost: yup.string().required('Cost is required'),\r\n    liters: yup.string().required('Liters is required'),\r\n    pump: yup.string().required('Pump is required')\r\n  });\r\n\r\n  const initialValues = {\r\n    fuel: '',\r\n    supplier: '',\r\n    cost: '',\r\n    liters: '',\r\n    pump: ''\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log('Form submitted with values: ', values);\r\n      try {\r\n        const response = await axios.post(apiurls?.addOrder, values);\r\n\r\n        console.log('API response:', response.data);\r\n        toast.success('Order added successfully', { autoClose: 600 });\r\n        formik.resetForm();\r\n        handleClose();\r\n      } catch (error) {\r\n        console.error('Error adding order:', error);\r\n        toast.error('Failed to add Order', { autoClose: 600 });\r\n      }\r\n    }\r\n  });\r\n\r\n  const fetchSupplierData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.supplierList);\r\n\r\n      const data = response.data.map((item) => ({\r\n        supplier: item?.name,\r\n        id: item?._id\r\n      }));\r\n      setSupplierData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching supplier data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchFuelData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.fuelList);\r\n      const data = response.data.map((item) => ({\r\n        name: item?.fuel_type,\r\n        qty: item?.litres,\r\n        status: item?.status,\r\n        id: item?._id\r\n      }));\r\n      setFuelData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching fuel data:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch pump data or use dummy data\r\n  const fetchPumpData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.getPump);\r\n      const data = response.data.map((item) => ({\r\n        name: item?.code,\r\n        id: item?._id\r\n      }));\r\n      const dummyPumps = [\r\n        { name: 'Pump 1', id: '1' },\r\n        { name: 'Pump 2', id: '2' },\r\n        { name: 'Pump 3', id: '3' }\r\n      ];\r\n      setPumpData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // Dummy pump data\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFuelData();\r\n    fetchSupplierData();\r\n    fetchPumpData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"scroll-dialog-title\" aria-describedby=\"scroll-dialog-description\">\r\n        <DialogTitle id=\"scroll-dialog-title\" style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Typography variant=\"h3\" style={{ marginLeft: '180px' }}>\r\n            Add New Order\r\n          </Typography>\r\n          <Typography>\r\n            <ClearIcon onClick={handleClose} style={{ cursor: 'pointer' }} />\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n              <Typography style={{ marginBottom: '15px' }} variant=\"h6\">\r\n                <h1>Enter Order Details</h1>\r\n              </Typography>\r\n              <Grid container rowSpacing={3} columnSpacing={{ xs: 0, sm: 5, md: 4 }}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormControl fullWidth>\r\n                    <FormLabel>Fuel Type</FormLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"fuel\"\r\n                      name=\"fuel\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      value={formik.values.fuel}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.fuel && Boolean(formik.errors.fuel)}\r\n                    >\r\n                      {fuelData &&\r\n                        fuelData.map((item) => (\r\n                          <MenuItem key={item.id} value={item.id}>\r\n                            {item.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText error>{formik.errors.fuel}</FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Supplier</FormLabel>\r\n                  <Select\r\n                    id=\"supplier\"\r\n                    name=\"supplier\"\r\n                    label=\"\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.supplier}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.supplier && Boolean(formik.errors.supplier)}\r\n                  >\r\n                    {supplierData &&\r\n                      supplierData.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.supplier}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                  <FormHelperText error>{formik.errors.supplier}</FormHelperText>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Total Liters</FormLabel>\r\n                  <TextField\r\n                    id=\"liters\"\r\n                    name=\"liters\"\r\n                    type=\"number\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.liters}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.liters && Boolean(formik.errors.liters)}\r\n                  />\r\n                  <FormHelperText error>{formik.errors.liters}</FormHelperText>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Total Cost</FormLabel>\r\n                  <TextField\r\n                    id=\"cost\"\r\n                    name=\"cost\"\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                    value={formik.values.cost}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.cost && Boolean(formik.errors.cost)}\r\n                  />\r\n                  <FormHelperText error>{formik.errors.cost}</FormHelperText>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <FormLabel>Pump</FormLabel>\r\n                  <Select\r\n                    id=\"pump\"\r\n                    name=\"pump\"\r\n                    label=\"\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.pump}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.pump && Boolean(formik.errors.pump)}\r\n                  >\r\n                    {pumpData &&\r\n                      pumpData.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                  <FormHelperText error>{formik.errors.pump}</FormHelperText>\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContentText>\r\n            <DialogActions>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  formik.resetForm();\r\n                  handleClose();\r\n                }}\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLead;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { Stack, Button, Container, Typography, Box, Card } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport Iconify from '../../ui-component/iconify';\r\nimport TableStyle from '../../ui-component/TableStyle';\r\nimport AddFuel from './AddFuel';\r\nimport { Visibility } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ViewOrderHistory from './OverOrderHistory/index'; // Assuming 'OverOrderHistory' is the correct import\r\nimport { useEffect } from 'react';\r\nimport { apiurls } from 'Service/api';\r\n\r\nconst Fuel = () => {\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n  const [fuelData, setFuelData] = useState([]);\r\n  const handleOpenAdd = () => setOpenAdd(true);\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n\r\n  const fetchFuelData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.fuelList);\r\n\r\n      const data = response.data.map((item) => {\r\n        return {\r\n          name: item?.fuel_type,\r\n          qty: item?.litres,\r\n          status: item?.status,\r\n          id: item?._id\r\n        };\r\n      });\r\n      setFuelData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching fuel data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch fuel data from the API when the component mounts\r\n    fetchFuelData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <AddFuel open={openAdd} handleClose={handleCloseAdd} />\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" mb={5} justifyContent=\"space-between\">\r\n          <Typography variant=\"h4\">Fuel-Management</Typography>\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" spacing={2}>\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={handleOpenAdd}>\r\n              Add New Order\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Visibility />}\r\n              component={Link}\r\n              to=\"/order/ViewOrderHistory\"\r\n              style={{ backgroundColor: '#673AB7 ' }}\r\n            >\r\n              View Order History\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <TableStyle>\r\n          <Box width=\"100%\">\r\n            <Card style={{ height: '600px', paddingTop: '15px' }}>\r\n              <DataGrid\r\n                rows={fuelData && fuelData}\r\n                columns={[\r\n                  { field: 'name', headerName: 'FUEL TYPE', flex: 1, cellClassName: 'name-column--cell' },\r\n                  // { field: 'qty', headerName: 'AVAILABLE LITERS', flex: 1, cellClassName: 'name-column--cell' },\r\n                  { field: 'status', headerName: 'STATUS', flex: 1, cellClassName: 'name-column--cell' }\r\n                ]}\r\n                getRowId={(row) => row.id}\r\n                slots={{ toolbar: GridToolbar }}\r\n                slotProps={{ toolbar: { showQuickFilter: true } }}\r\n              />\r\n            </Card>\r\n          </Box>\r\n        </TableStyle>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Fuel;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["TableStyle","styled","border","borderBottom","color","Palette","cursor","textTransform","textDecoration","backgroundColor","outline","borderRadius","scrollbarWidth","fontSize","GREY","palette","common","black","white","primary","lighter","light","main","dark","darker","contrastText","secondary","info","success","warning","error","grey","divider","alpha","text","disabled","background","paper","default","neutral","action","active","hover","selected","disabledBackground","focus","hoverOpacity","disabledOpacity","Iconify","forwardRef","_ref","ref","icon","width","sx","other","_jsx","Box","component","Icon","height","propTypes","PropTypes","ViewOrderHistory","orderData","setOrderData","useState","useEffect","async","response","axios","apiurls","console","log","data","map","item","fuelType","fuel","fuel_type","totalLitersSupplied","liters","cost","supplier","name","pump","code","date","moment","created_at","format","id","_id","fetchOrderData","children","DialogContent","dividers","_jsxs","DialogContentText","tabIndex","Stack","direction","alignItems","mb","justifyContent","Typography","style","marginBottom","variant","spacing","Button","Link","to","Card","paddingTop","DataGrid","rows","columns","field","headerName","flex","cellClassName","headerAlign","align","getRowId","row","slots","toolbar","GridToolbar","slotProps","showQuickFilter","props","open","handleClose","fuelData","setFuelData","supplierData","setSupplierData","pumpData","setPumpData","validationSchema","yup","required","formik","useFormik","initialValues","onSubmit","values","toast","autoClose","resetForm","qty","litres","status","fetchFuelData","fetchSupplierData","fetchPumpData","Dialog","onClose","DialogTitle","display","marginLeft","ClearIcon","onClick","handleSubmit","Grid","container","rowSpacing","columnSpacing","xs","sm","md","FormControl","fullWidth","FormLabel","Select","labelId","label","size","value","onChange","handleChange","touched","Boolean","errors","MenuItem","FormHelperText","TextField","type","DialogActions","createSvgIcon","d","Fuel","openAdd","setOpenAdd","_Fragment","AddFuel","handleCloseAdd","Container","startIcon","handleOpenAdd","Visibility","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","React","inProps","useThemeProps","className","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx"],"sourceRoot":""}