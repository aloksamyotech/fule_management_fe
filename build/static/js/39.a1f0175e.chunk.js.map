{"version":3,"file":"static/js/39.a1f0175e.chunk.js","mappings":"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","sources":["ui-component/TableStyle.js","ui-component/ThemePalette.js","ui-component/iconify/Iconify.js","views/SalesSupport/AddSales.js","views/SalesSupport/index.js"],"sourcesContent":["import { styled } from '@mui/material/styles';\r\nimport Palette from '../ui-component/ThemePalette';\r\n\r\nconst TableStyle = styled('div')({\r\n  '& .MuiDataGrid-root': {\r\n    border: 'none'\r\n  },\r\n  '& .MuiDataGrid-cell': {\r\n    borderBottom: 'none'\r\n  },\r\n  '& .name-column--cell': {\r\n    color: Palette.primary.main,\r\n    cursor: 'pointer'\r\n  },\r\n  '& .name-column--cell--capitalize': {\r\n    textTransform: 'capitalize'\r\n  },\r\n  '& .name-column--cell:hover': {\r\n    textDecoration: 'underline'\r\n  },\r\n  '& .MuiDataGrid-columnHeaders': {\r\n    backgroundColor: Palette.grey[200],\r\n    borderBottom: 'none',\r\n    outline: 'none !important',\r\n    borderRadius: '0px'\r\n  },\r\n  '& .MuiDataGrid-virtualScroller': {\r\n    scrollbarWidth: '1px'\r\n  },\r\n  '& .MuiDataGrid-toolbarContainer .MuiButton-text': {\r\n    textTransform: 'capitalize',\r\n    fontSize: '15px'\r\n  },\r\n  '.MuiDataGrid-cell:focus,.MuiDataGrid-columnHeader:focus,MuiDataGrid-columnHeaderCheckbox:focus': {\r\n    outline: 'none !important'\r\n  },\r\n  '.css-1jiby6q-MuiDataGrid-root .MuiDataGrid-columnHeader:focus-within, .css-1jiby6q-MuiDataGrid-root .MuiDataGrid-cell:focus-within': {\r\n    outline: 'none'\r\n  }\r\n});\r\n\r\nexport default TableStyle;\r\n","import { alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// SETUP COLORS\r\nconst GREY = {\r\n  0: '#FFFFFF',\r\n  100: '#F9FAFB',\r\n  200: '#F4F6F8',\r\n  300: '#DFE3E8',\r\n  400: '#C4CDD5',\r\n  500: '#919EAB',\r\n  600: '#637381',\r\n  700: '#454F5B',\r\n  800: '#212B36',\r\n  900: '#161C24'\r\n};\r\n\r\nconst PRIMARY = {\r\n  lighter: '#D1E9FC',\r\n  light: '#76B0F1',\r\n  main: '#2065D1',\r\n  dark: '#103996',\r\n  darker: '#061B64',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SECONDARY = {\r\n  lighter: '#D6E4FF',\r\n  light: '#84A9FF',\r\n  main: '#3366FF',\r\n  dark: '#1939B7',\r\n  darker: '#091A7A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst INFO = {\r\n  lighter: '#D0F2FF',\r\n  light: '#74CAFF',\r\n  main: '#1890FF',\r\n  dark: '#0C53B7',\r\n  darker: '#04297A',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst SUCCESS = {\r\n  lighter: '#E9FCD4',\r\n  light: '#AAF27F',\r\n  main: '#54D62C',\r\n  dark: '#229A16',\r\n  darker: '#08660D',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst WARNING = {\r\n  lighter: '#FFF7CD',\r\n  light: '#FFE16A',\r\n  main: '#FFC107',\r\n  dark: '#B78103',\r\n  darker: '#7A4F01',\r\n  contrastText: GREY[800]\r\n};\r\n\r\nconst ERROR = {\r\n  lighter: '#FFE7D9',\r\n  light: '#FFA48D',\r\n  main: '#FF4842',\r\n  dark: '#B72136',\r\n  darker: '#7A0C2E',\r\n  contrastText: '#fff'\r\n};\r\n\r\nconst palette = {\r\n  common: { black: '#000', white: '#fff' },\r\n  primary: PRIMARY,\r\n  secondary: SECONDARY,\r\n  info: INFO,\r\n  success: SUCCESS,\r\n  warning: WARNING,\r\n  error: ERROR,\r\n  grey: GREY,\r\n  divider: alpha(GREY[500], 0.24),\r\n  text: {\r\n    primary: GREY[800],\r\n    secondary: GREY[600],\r\n    disabled: GREY[500]\r\n  },\r\n  background: {\r\n    paper: '#fff',\r\n    default: GREY[100],\r\n    neutral: GREY[200]\r\n  },\r\n  action: {\r\n    active: GREY[600],\r\n    hover: alpha(GREY[500], 0.08),\r\n    selected: alpha(GREY[500], 0.16),\r\n    disabled: alpha(GREY[500], 0.8),\r\n    disabledBackground: alpha(GREY[500], 0.24),\r\n    focus: alpha(GREY[500], 0.24),\r\n    hoverOpacity: 0.08,\r\n    disabledOpacity: 0.48\r\n  }\r\n};\r\n\r\nexport default palette;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// icons\r\nimport { Icon } from '@iconify/react';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Iconify = forwardRef(({ icon, width = 20, sx, ...other }, ref) => (\r\n  <Box ref={ref} component={Icon} icon={icon} sx={{ width, height: width, ...sx }} {...other} />\r\n));\r\n\r\nIconify.propTypes = {\r\n  sx: PropTypes.object,\r\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\r\n};\r\n\r\nexport default Iconify;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { apiurls } from 'Service/api';\r\nimport { FormControlLabel, FormHelperText, FormLabel, Radio, RadioGroup } from '@mui/material';\r\nimport { toast } from 'react-toastify';\r\nimport Palette from '../../ui-component/ThemePalette';\r\n\r\nconst SalesData = (props) => {\r\n  const { open, handleClose, fetchSalesData } = props;\r\n  const [pumpData, setPumpData] = useState([]);\r\n  const [staffData, setStaffData] = useState([]);\r\n  const [fuelData, setFuelData] = useState([]);\r\n\r\n  // const userid = localStorage.getItem('user_id');\r\n\r\n  // -----------  validationSchema\r\n  const validationSchema = yup.object({\r\n    liter: yup.string().required('Liter is required'),\r\n    pump: yup.string().required('Pump is required'),\r\n    fuel: yup.string().required('Fuel is required'),\r\n    staff: yup.string().required('Staff is required')\r\n  });\r\n\r\n  // -----------   initialValues\r\n  const initialValues = {\r\n    liter: '',\r\n    amount: '',\r\n    pump: '',\r\n    fuel: '',\r\n    staff: ''\r\n  };\r\n\r\n  // formik\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      console.log(values);\r\n      try {\r\n        const response = await axios.post(apiurls?.addSales, values);\r\n        console.log(response);\r\n        console.log('API response:', response.data);\r\n        if (response.data == 'internal server error') {\r\n          toast.error('Something Went Wrong', { autoClose: 600 });\r\n        } else if (response.data == 'fuel not available') {\r\n          toast.error('No Enough Fuel ');\r\n        } else {\r\n          toast.success('data saved successfully', { autoClose: 600 });\r\n          formik.resetForm();\r\n          handleClose();\r\n          await fetchSalesData();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error SavingData:', error);\r\n        toast.error('Failed to add SavingData', { autoClose: 600 });\r\n      }\r\n    }\r\n  });\r\n  const fetchStaffData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.getStaff);\r\n      const data = response.data.map((item) => ({\r\n        name: item?.full_name,\r\n        id: item?._id\r\n      }));\r\n      setStaffData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching supplier data:', error);\r\n    }\r\n  };\r\n  const fetchPumpData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.getPump);\r\n      const data = response.data.map((item) => ({\r\n        name: item?.code,\r\n        id: item?._id\r\n      }));\r\n      setPumpData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching fuel data:', error);\r\n    }\r\n  };\r\n  const fetchFuelData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.fuelList);\r\n      const data = response.data.map((item) => ({\r\n        name: item?.fuel_type,\r\n        id: item?._id\r\n      }));\r\n      setFuelData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching fuel data:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchPumpData();\r\n    fetchStaffData();\r\n    fetchFuelData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} aria-labelledby=\"scroll-dialog-title\" aria-describedby=\"scroll-dialog-description\">\r\n        <DialogTitle\r\n          id=\"scroll-dialog-title\"\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n            // backgroundColor: \"#2b4054\",\r\n            // color: \"white\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\">Add New </Typography>\r\n          <Typography>\r\n            <ClearIcon onClick={handleClose} style={{ cursor: 'pointer' }} />\r\n          </Typography>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Typography style={{ marginBottom: '15px' }} variant=\"h6\">\r\n              Basic Sales Information\r\n            </Typography>\r\n            <Grid container rowSpacing={3} columnSpacing={{ xs: 0, sm: 5, md: 4 }}>\r\n              <Grid item xs={12} sm={6} md={6}>\r\n                <FormControl fullWidth>\r\n                  <FormLabel>PUMP</FormLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"pump\"\r\n                    name=\"pump\"\r\n                    label=\"\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.pump || ''}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.pump && Boolean(formik.errors.pump)}\r\n                    helperText={formik.touched.pump && formik.errors.pump}\r\n                  >\r\n                    {pumpData &&\r\n                      pumpData.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                  <FormHelperText style={{ color: Palette.error.main }}>{formik.touched.pump && formik.errors.pump}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6}>\r\n                <FormControl fullWidth>\r\n                  <FormLabel>FUEL</FormLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"fuel\"\r\n                    name=\"fuel\"\r\n                    label=\"\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.fuel}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.fuel && Boolean(formik.errors.fuel)}\r\n                  >\r\n                    {fuelData &&\r\n                      fuelData.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                  <FormHelperText style={{ color: Palette.error.main }}>{formik.touched.fuel && formik.errors.fuel}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6}>\r\n                <FormControl fullWidth>\r\n                  <FormLabel>EMPLOYEE</FormLabel>\r\n                  <Select\r\n                    id=\"staff\"\r\n                    name=\"staff\"\r\n                    label=\"\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    value={formik.values.staff || ''}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.staff && Boolean(formik.errors.staff)}\r\n                    helperText={formik.touched.staff && formik.errors.staff}\r\n                  >\r\n                    {staffData &&\r\n                      staffData.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                  <FormHelperText style={{ color: Palette.error.main }}>{formik.touched.staff && formik.errors.staff}</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={6}>\r\n                <FormLabel>AMOUNT</FormLabel>\r\n                <TextField\r\n                  id=\"amount\"\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  value={formik.values.amount}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.amount && Boolean(formik.errors.amount)}\r\n                  helperText={formik.touched.amount && formik.errors.amount}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={12}>\r\n                <FormLabel>LITER_SOLD</FormLabel>\r\n                <TextField\r\n                  id=\"liter\"\r\n                  name=\"liter\"\r\n                  type=\"number\"\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  value={formik.values.liter}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.liter && Boolean(formik.errors.liter)}\r\n                  helperText={formik.touched.liter && formik.errors.liter}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <DialogActions>\r\n              <Button type=\"submit\" variant=\"contained\" style={{ textTransform: 'capitalize' }}>\r\n                Save\r\n              </Button>\r\n              <Button\r\n                type=\"reset\"\r\n                variant=\"outlined\"\r\n                style={{ textTransform: 'capitalize' }}\r\n                color=\"error\"\r\n                onClick={() => {\r\n                  formik.resetForm();\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesData;\r\n","/* eslint-disable react/prop-types */\r\nimport { useState, useEffect } from 'react';\r\nimport { Button, DialogContent, DialogContentText, Typography, Stack, Box, Card, Container } from '@mui/material';\r\nimport Iconify from '../../ui-component/iconify';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport TableStyle from '../../ui-component/TableStyle';\r\nimport SalesData from './AddSales';\r\nimport { apiurls } from 'Service/api';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst SalesManagement = () => {\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n  const [salesData, setSalesData] = useState([]);\r\n  const handleOpenAdd = () => setOpenAdd(true);\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n\r\n  const fetchSalesData = async () => {\r\n    try {\r\n      const response = await axios.get(apiurls?.getSales);\r\n      console.log(response);\r\n      const data = response.data.map((item) => {\r\n        return {\r\n          attendant: item?.staff.full_name,\r\n          fuel: item?.fuel.fuel_type,\r\n          pump: item?.pump.code,\r\n          date: moment(item?.created_at).format('YYYY-MM-DD HH:mm:ss'),\r\n          priceL: item?.fuel.liter_price,\r\n          litersSold: item?.liter,\r\n          totalAmount: item?.fuel.liter_price * item.liter,\r\n          id: item?._id\r\n        };\r\n      });\r\n      setSalesData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching fuel data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSalesData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SalesData open={openAdd} handleClose={handleCloseAdd} fetchSalesData={fetchSalesData} />\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" mb={5} justifyContent={'space-between'}>\r\n          <Typography variant=\"h4\">Sales-Management</Typography>\r\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent={'flex-end'} spacing={2}>\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />} onClick={handleOpenAdd}>\r\n              Add Sales\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n        <TableStyle>\r\n          <Box width=\"100%\">\r\n            <Card style={{ height: '600px', paddingTop: '15px' }}>\r\n              <DataGrid\r\n                rows={salesData && salesData}\r\n                columns={[\r\n                  {\r\n                    field: 'attendant',\r\n                    headerName: 'ATTENDANT',\r\n                    flex: 1,\r\n                    cellClassName: ' name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  },\r\n                  {\r\n                    field: 'fuel',\r\n                    headerName: 'FUEL',\r\n                    flex: 1,\r\n                    cellClassName: ' name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  },\r\n                  {\r\n                    field: 'pump',\r\n                    headerName: 'PUMP',\r\n                    flex: 1,\r\n                    cellClassName: 'name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  },\r\n                  {\r\n                    field: 'priceL',\r\n                    headerName: 'PRICE/L',\r\n                    flex: 1,\r\n                    cellClassName: 'name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  },\r\n\r\n                  {\r\n                    field: 'litersSold',\r\n                    headerName: 'LITERS SOLD',\r\n                    flex: 1,\r\n                    cellClassName: 'name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  },\r\n                  {\r\n                    field: 'totalAmount',\r\n                    headerName: 'TOTAL AMOUNT',\r\n                    flex: 1,\r\n                    cellClassName: 'name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  },\r\n                  {\r\n                    field: 'date',\r\n                    headerName: 'DATE',\r\n                    flex: 1,\r\n                    cellClassName: 'name-column--cell--capitalize',\r\n                    headerAlign: 'center',\r\n                    align: 'center'\r\n                  }\r\n                ]}\r\n                getRowId={(row) => row.id}\r\n                slots={{ toolbar: GridToolbar }}\r\n                slotProps={{ toolbar: { showQuickFilter: true } }}\r\n              />\r\n            </Card>\r\n          </Box>\r\n        </TableStyle>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesManagement;\r\n"],"names":["TableStyle","styled","border","borderBottom","color","Palette","cursor","textTransform","textDecoration","backgroundColor","outline","borderRadius","scrollbarWidth","fontSize","GREY","palette","common","black","white","primary","lighter","light","main","dark","darker","contrastText","secondary","info","success","warning","error","grey","divider","alpha","text","disabled","background","paper","default","neutral","action","active","hover","selected","disabledBackground","focus","hoverOpacity","disabledOpacity","Iconify","forwardRef","_ref","ref","icon","width","sx","other","_jsx","Box","component","Icon","height","propTypes","PropTypes","props","open","handleClose","fetchSalesData","pumpData","setPumpData","useState","staffData","setStaffData","fuelData","setFuelData","validationSchema","yup","liter","required","pump","fuel","staff","formik","useFormik","initialValues","amount","onSubmit","async","console","log","values","response","axios","apiurls","data","toast","autoClose","resetForm","useEffect","map","item","name","code","id","_id","fetchPumpData","full_name","fetchStaffData","fuel_type","fetchFuelData","children","_jsxs","Dialog","DialogTitle","style","display","justifyContent","Typography","variant","ClearIcon","onClick","DialogContent","dividers","handleSubmit","marginBottom","Grid","container","rowSpacing","columnSpacing","xs","sm","md","FormControl","fullWidth","FormLabel","Select","labelId","label","size","value","onChange","handleChange","touched","Boolean","errors","helperText","MenuItem","FormHelperText","TextField","type","DialogActions","Button","SalesManagement","openAdd","setOpenAdd","salesData","setSalesData","attendant","date","moment","created_at","format","priceL","liter_price","litersSold","totalAmount","_Fragment","SalesData","handleCloseAdd","Container","Stack","direction","alignItems","mb","spacing","startIcon","handleOpenAdd","Card","paddingTop","DataGrid","rows","columns","field","headerName","flex","cellClassName","headerAlign","align","getRowId","row","slots","toolbar","GridToolbar","slotProps","showQuickFilter"],"sourceRoot":""}